# -*- coding: utf-8 -*-
"""CRICKET WORLD CUP ANALYSIS CLEANING AND TRANFORMING

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jpJXZAGK0SGW0VotsS6DYeb1SWLum06N
"""

import pandas as pd
import json
import numpy as np

"""**1. MATCH RESULTS**"""

with open('/content/drive/MyDrive/DATA SCIENCE PROJECTS /CRICKET WORLD CUP ANALYSIS CLEANING AND TRANFORMING/t20_wc_match_results.json') as f:
    data =json.load(f)

df_match = pd.DataFrame(data[0]['matchSummary'])
df_match.head()

df_match.rename({'scorecard':'match_id'},axis = 1, inplace = True)
df_match.tail()
###to get match_id as primary or secondary key
df_match.to_csv('/content/drive/MyDrive/DATA SCIENCE PROJECTS /CRICKET WORLD CUP ANALYSIS CLEANING AND TRANFORMING/match_summary.csv',index=False)

from numpy.lib.shape_base import vsplit
###creatinf dictonary for team1 vs team2 or team2 vs team1 with their id
###iterrows is function which goes to each row one by one

match_ids_dict={}
for index,row in df_match.iterrows():
  key1 = row['team1'] + ' Vs ' + row['team2']
  key2 = row['team2'] + ' Vs ' + row['team1']
  match_ids_dict[key1] = row["match_id"]
  match_ids_dict[key2] = row["match_id"]

match_ids_dict

"""**2. BATTING SUMMARY**"""

with open('/content/drive/MyDrive/DATA SCIENCE PROJECTS /CRICKET WORLD CUP ANALYSIS CLEANING AND TRANFORMING/t20_wc_batting_summary.json') as f:
  data = json.load(f)

all_records=[]
for rec in data:
  all_records.extend(rec['battingSummary'])

df_batting = pd.DataFrame(all_records)
df_batting.head (10)

###creating new table of out or not out using dissmisal

df_batting["out/not out"] = df_batting.dismissal.apply(lambda x: "out" if len(x)>0 else "not out" )
df_batting.head(10)

###dropping column
df_batting.drop(columns=["dismissal"],inplace = True)
df_batting.head(100)

###checking on how to get data using match_ids_dict
match_ids_dict["Namibia Vs Sri Lanka"]

df_batting["match_id"]=df_batting["match"].map(match_ids_dict)
df_batting.head(69)

df_batting.to_csv('/content/drive/MyDrive/DATA SCIENCE PROJECTS /CRICKET WORLD CUP ANALYSIS CLEANING AND TRANFORMING/batting_summary.csv',index=False)

"""**3.BOWLING SUMMARY**"""

with open('/content/drive/MyDrive/DATA SCIENCE PROJECTS /CRICKET WORLD CUP ANALYSIS CLEANING AND TRANFORMING/t20_wc_bowling_summary.json') as f:
  data = json.load(f)

all_records=[]
for rec in data:
  all_records.extend(rec['bowlingSummary'])

df_bowling = pd.DataFrame(all_records)
df_bowling.head (10)

df_bowling["match_id"]=df_bowling["match"].map(match_ids_dict)
df_bowling.head(69)

df_bowling.to_csv('/content/drive/MyDrive/DATA SCIENCE PROJECTS /CRICKET WORLD CUP ANALYSIS CLEANING AND TRANFORMING/bowling_summary.csv',index=False)

"""**4. PLAYER INFO**"""

with open('/content/drive/MyDrive/DATA SCIENCE PROJECTS /CRICKET WORLD CUP ANALYSIS CLEANING AND TRANFORMING/t20_wc_player_info.json') as f:
  data = json.load(f)


df_playerinfo = pd.DataFrame(data)
df_playerinfo.head (69)

df_playerinfo.to_csv('/content/drive/MyDrive/DATA SCIENCE PROJECTS /CRICKET WORLD CUP ANALYSIS CLEANING AND TRANFORMING/plyer_info_no_image.csv',index=False)